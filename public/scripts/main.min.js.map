{"version":3,"sources":["mdlComponentHandler.js","button.js","checkbox.js","icon-toggle.js","menu.js","progress.js","radio.js","slider.js","spinner.js","switch.js","tabs.js","textfield.js","tooltip.js","layout.js","data-table.js","ripple.js","main.js"],"names":["componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","getUpgradedListOfElement_","dataUpgraded","getAttribute","split","isElementUpgraded_","upgradedList","indexOf","createEvent_","eventType","bubbles","cancelable","window","CustomEvent","ev","document","createEvent","initEvent","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","upgradingEv","dispatchEvent","defaultPrevented","classesToUpgrade","push","classList","forEach","component","contains","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","upgradedEv","upgradeElementsInternal","Array","isArray","prototype","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","item","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","element_","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","addEventListener","createElement","documentElement","add","MaterialButton","this","init","Constant_","CssClasses_","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler_","event","blur","disable","disabled","enable","rippleContainer","rippleElement_","appendChild","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","setTimeout","inputElement_","checked","check","uncheck","querySelector","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","ripple","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","JS_RIPPLE_EFFECT","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","preventDefault","focus","currentIndex","target","e","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","show","transitionDuration","itemDelay","transitionDelay","requestAnimationFrame","parentNode","removeEventListener","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","button","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSlider","isIE_","navigator","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","y","fraction","value","min","max","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTab","tab","ctx","MDL_JS_RIPPLE_EFFECT","MDL_RIPPLE_CONTAINER","MDL_RIPPLE","charAt","href","panel","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialTabs","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","onReset_","checkValidity","checkDirty","checkFocus","input_","Boolean","validity","valid","label_","parseInt","isNaN","boundUpdateClassesHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialTooltip","IS_ACTIVE","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","hideTooltip_","boundMouseEnterHandler","boundMouseLeaveAndScrollHandler","MaterialLayoutTab","tabs","panels","layout","selectTab","content_","tabBar_","TAB_MANUAL_SWITCH","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","scrollTop","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","drawerButton","focusedElement","directChildren","childNodes","numChildren","c","child","persisted","overflowY","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","matchMedia","addListener","tabContainer","leftButton","leftButtonIcon","textContent","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","windowResizeHandler","resizeTimeoutId_","clearTimeout","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","IS_SELECTED","selectRow_","checkbox","row","opt_rows","createCheckbox_","label","labelClasses","firstHeader","bodyRows","footRows","rows","concat","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","Math","sqrt","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","bound","currentTarget","round","undefined","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","size","offset","webkitTransform","msTransform","transform","isLocalhost","location","hostname","match","protocol","serviceWorker","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","console","error"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A component handler interface using the revealing module design pattern.\r\n * More details on this design pattern here:\r\n * https://github.com/jasonmayes/mdl-component-design-pattern\r\n *\r\n * @author Jason Mayes.\r\n */\r\n/* exported componentHandler */\r\n\r\n// Pre-defining the componentHandler interface, for closure documentation and\r\n// static verification.\r\nvar componentHandler = {\r\n  /**\r\n   * Searches existing DOM for elements of our component type and upgrades them\r\n   * if they have not already been upgraded.\r\n   *\r\n   * @param {string=} optJsClass the programatic name of the element class we\r\n   * need to create a new instance of.\r\n   * @param {string=} optCssClass the name of the CSS class elements of this\r\n   * type will have.\r\n   */\r\n  upgradeDom: function(optJsClass, optCssClass) {},\r\n  /**\r\n   * Upgrades a specific element rather than all in the DOM.\r\n   *\r\n   * @param {!Element} element The element we wish to upgrade.\r\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\r\n   * the element to.\r\n   */\r\n  upgradeElement: function(element, optJsClass) {},\r\n  /**\r\n   * Upgrades a specific list of elements rather than all in the DOM.\r\n   *\r\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\r\n   * The elements we wish to upgrade.\r\n   */\r\n  upgradeElements: function(elements) {},\r\n  /**\r\n   * Upgrades all registered components found in the current DOM. This is\r\n   * automatically called on window load.\r\n   */\r\n  upgradeAllRegistered: function() {},\r\n  /**\r\n   * Allows user to be alerted to any upgrades that are performed for a given\r\n   * component type\r\n   *\r\n   * @param {string} jsClass The class name of the MDL component we wish\r\n   * to hook into for any upgrades performed.\r\n   * @param {function(!HTMLElement)} callback The function to call upon an\r\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\r\n   * got upgraded.\r\n   */\r\n  registerUpgradedCallback: function(jsClass, callback) {},\r\n  /**\r\n   * Registers a class for future use and attempts to upgrade existing DOM.\r\n   *\r\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\r\n   */\r\n  register: function(config) {},\r\n  /**\r\n   * Downgrade either a given node, an array of nodes, or a NodeList.\r\n   *\r\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\r\n   */\r\n  downgradeElements: function(nodes) {}\r\n};\r\n\r\ncomponentHandler = (function() {\r\n  'use strict';\r\n\r\n  /** @type {!Array<componentHandler.ComponentConfig>} */\r\n  var registeredComponents_ = [];\r\n\r\n  /** @type {!Array<componentHandler.Component>} */\r\n  var createdComponents_ = [];\r\n\r\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\r\n\r\n  /**\r\n   * Searches registered components for a class we are interested in using.\r\n   * Optionally replaces a match with passed object if specified.\r\n   *\r\n   * @param {string} name The name of a class we want to use.\r\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\r\n   * @return {!Object|boolean}\r\n   * @private\r\n   */\r\n  function findRegisteredClass_(name, optReplace) {\r\n    for (var i = 0; i < registeredComponents_.length; i++) {\r\n      if (registeredComponents_[i].className === name) {\r\n        if (typeof optReplace !== 'undefined') {\r\n          registeredComponents_[i] = optReplace;\r\n        }\r\n        return registeredComponents_[i];\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns an array of the classNames of the upgraded classes on the element.\r\n   *\r\n   * @param {!Element} element The element to fetch data from.\r\n   * @return {!Array<string>}\r\n   * @private\r\n   */\r\n  function getUpgradedListOfElement_(element) {\r\n    var dataUpgraded = element.getAttribute('data-upgraded');\r\n    // Use `['']` as default value to conform the `,name,name...` style.\r\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\r\n  }\r\n\r\n  /**\r\n   * Returns true if the given element has already been upgraded for the given\r\n   * class.\r\n   *\r\n   * @param {!Element} element The element we want to check.\r\n   * @param {string} jsClass The class to check for.\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  function isElementUpgraded_(element, jsClass) {\r\n    var upgradedList = getUpgradedListOfElement_(element);\r\n    return upgradedList.indexOf(jsClass) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Create an event object.\r\n   *\r\n   * @param {string} eventType The type name of the event.\r\n   * @param {boolean} bubbles Whether the event should bubble up the DOM.\r\n   * @param {boolean} cancelable Whether the event can be canceled.\r\n   * @returns {!Event}\r\n   */\r\n  function createEvent_(eventType, bubbles, cancelable) {\r\n    if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\r\n      return new CustomEvent(eventType, {\r\n        bubbles: bubbles,\r\n        cancelable: cancelable\r\n      });\r\n    } else {\r\n      var ev = document.createEvent('Events');\r\n      ev.initEvent(eventType, bubbles, cancelable);\r\n      return ev;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Searches existing DOM for elements of our component type and upgrades them\r\n   * if they have not already been upgraded.\r\n   *\r\n   * @param {string=} optJsClass the programatic name of the element class we\r\n   * need to create a new instance of.\r\n   * @param {string=} optCssClass the name of the CSS class elements of this\r\n   * type will have.\r\n   */\r\n  function upgradeDomInternal(optJsClass, optCssClass) {\r\n    if (typeof optJsClass === 'undefined' &&\r\n        typeof optCssClass === 'undefined') {\r\n      for (var i = 0; i < registeredComponents_.length; i++) {\r\n        upgradeDomInternal(registeredComponents_[i].className,\r\n            registeredComponents_[i].cssClass);\r\n      }\r\n    } else {\r\n      var jsClass = /** @type {string} */ (optJsClass);\r\n      if (typeof optCssClass === 'undefined') {\r\n        var registeredClass = findRegisteredClass_(jsClass);\r\n        if (registeredClass) {\r\n          optCssClass = registeredClass.cssClass;\r\n        }\r\n      }\r\n\r\n      var elements = document.querySelectorAll('.' + optCssClass);\r\n      for (var n = 0; n < elements.length; n++) {\r\n        upgradeElementInternal(elements[n], jsClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upgrades a specific element rather than all in the DOM.\r\n   *\r\n   * @param {!Element} element The element we wish to upgrade.\r\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\r\n   * the element to.\r\n   */\r\n  function upgradeElementInternal(element, optJsClass) {\r\n    // Verify argument type.\r\n    if (!(typeof element === 'object' && element instanceof Element)) {\r\n      throw new Error('Invalid argument provided to upgrade MDL element.');\r\n    }\r\n    // Allow upgrade to be canceled by canceling emitted event.\r\n    var upgradingEv = createEvent_('mdl-componentupgrading', true, true);\r\n    element.dispatchEvent(upgradingEv);\r\n    if (upgradingEv.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    var upgradedList = getUpgradedListOfElement_(element);\r\n    var classesToUpgrade = [];\r\n    // If jsClass is not provided scan the registered components to find the\r\n    // ones matching the element's CSS classList.\r\n    if (!optJsClass) {\r\n      var classList = element.classList;\r\n      registeredComponents_.forEach(function(component) {\r\n        // Match CSS & Not to be upgraded & Not upgraded.\r\n        if (classList.contains(component.cssClass) &&\r\n            classesToUpgrade.indexOf(component) === -1 &&\r\n            !isElementUpgraded_(element, component.className)) {\r\n          classesToUpgrade.push(component);\r\n        }\r\n      });\r\n    } else if (!isElementUpgraded_(element, optJsClass)) {\r\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\r\n    }\r\n\r\n    // Upgrade the element for each classes.\r\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\r\n      registeredClass = classesToUpgrade[i];\r\n      if (registeredClass) {\r\n        // Mark element as upgraded.\r\n        upgradedList.push(registeredClass.className);\r\n        element.setAttribute('data-upgraded', upgradedList.join(','));\r\n        var instance = new registeredClass.classConstructor(element);\r\n        instance[componentConfigProperty_] = registeredClass;\r\n        createdComponents_.push(instance);\r\n        // Call any callbacks the user has registered with this component type.\r\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\r\n          registeredClass.callbacks[j](element);\r\n        }\r\n\r\n        if (registeredClass.widget) {\r\n          // Assign per element instance for control over API\r\n          element[registeredClass.className] = instance;\r\n        }\r\n      } else {\r\n        throw new Error(\r\n          'Unable to find a registered component for the given class.');\r\n      }\r\n\r\n      var upgradedEv = createEvent_('mdl-componentupgraded', true, false);\r\n      element.dispatchEvent(upgradedEv);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upgrades a specific list of elements rather than all in the DOM.\r\n   *\r\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\r\n   * The elements we wish to upgrade.\r\n   */\r\n  function upgradeElementsInternal(elements) {\r\n    if (!Array.isArray(elements)) {\r\n      if (elements instanceof Element) {\r\n        elements = [elements];\r\n      } else {\r\n        elements = Array.prototype.slice.call(elements);\r\n      }\r\n    }\r\n    for (var i = 0, n = elements.length, element; i < n; i++) {\r\n      element = elements[i];\r\n      if (element instanceof HTMLElement) {\r\n        upgradeElementInternal(element);\r\n        if (element.children.length > 0) {\r\n          upgradeElementsInternal(element.children);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers a class for future use and attempts to upgrade existing DOM.\r\n   *\r\n   * @param {componentHandler.ComponentConfigPublic} config\r\n   */\r\n  function registerInternal(config) {\r\n    // In order to support both Closure-compiled and uncompiled code accessing\r\n    // this method, we need to allow for both the dot and array syntax for\r\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\r\n    // pattern repeated across this method.\r\n    var widgetMissing = (typeof config.widget === 'undefined' &&\r\n        typeof config['widget'] === 'undefined');\r\n    var widget = true;\r\n\r\n    if (!widgetMissing) {\r\n      widget = config.widget || config['widget'];\r\n    }\r\n\r\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\r\n      classConstructor: config.constructor || config['constructor'],\r\n      className: config.classAsString || config['classAsString'],\r\n      cssClass: config.cssClass || config['cssClass'],\r\n      widget: widget,\r\n      callbacks: []\r\n    });\r\n\r\n    registeredComponents_.forEach(function(item) {\r\n      if (item.cssClass === newConfig.cssClass) {\r\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\r\n      }\r\n      if (item.className === newConfig.className) {\r\n        throw new Error('The provided className has already been registered');\r\n      }\r\n    });\r\n\r\n    if (config.constructor.prototype\r\n        .hasOwnProperty(componentConfigProperty_)) {\r\n      throw new Error(\r\n          'MDL component classes must not have ' + componentConfigProperty_ +\r\n          ' defined as a property.');\r\n    }\r\n\r\n    var found = findRegisteredClass_(config.classAsString, newConfig);\r\n\r\n    if (!found) {\r\n      registeredComponents_.push(newConfig);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Allows user to be alerted to any upgrades that are performed for a given\r\n   * component type\r\n   *\r\n   * @param {string} jsClass The class name of the MDL component we wish\r\n   * to hook into for any upgrades performed.\r\n   * @param {function(!HTMLElement)} callback The function to call upon an\r\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\r\n   * got upgraded.\r\n   */\r\n  function registerUpgradedCallbackInternal(jsClass, callback) {\r\n    var regClass = findRegisteredClass_(jsClass);\r\n    if (regClass) {\r\n      regClass.callbacks.push(callback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Upgrades all registered components found in the current DOM. This is\r\n   * automatically called on window load.\r\n   */\r\n  function upgradeAllRegisteredInternal() {\r\n    for (var n = 0; n < registeredComponents_.length; n++) {\r\n      upgradeDomInternal(registeredComponents_[n].className);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check the component for the downgrade method.\r\n   * Execute if found.\r\n   * Remove component from createdComponents list.\r\n   *\r\n   * @param {?componentHandler.Component} component\r\n   */\r\n  function deconstructComponentInternal(component) {\r\n    if (component) {\r\n      var componentIndex = createdComponents_.indexOf(component);\r\n      createdComponents_.splice(componentIndex, 1);\r\n\r\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\r\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\r\n      upgrades.splice(componentPlace, 1);\r\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\r\n\r\n      var ev = createEvent_('mdl-componentdowngraded', true, false);\r\n      component.element_.dispatchEvent(ev);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Downgrade either a given node, an array of nodes, or a NodeList.\r\n   *\r\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\r\n   */\r\n  function downgradeNodesInternal(nodes) {\r\n    /**\r\n     * Auxiliary function to downgrade a single node.\r\n     * @param  {!Node} node the node to be downgraded\r\n     */\r\n    var downgradeNode = function(node) {\r\n      createdComponents_.filter(function(item) {\r\n        return item.element_ === node;\r\n      }).forEach(deconstructComponentInternal);\r\n    };\r\n    if (nodes instanceof Array || nodes instanceof NodeList) {\r\n      for (var n = 0; n < nodes.length; n++) {\r\n        downgradeNode(nodes[n]);\r\n      }\r\n    } else if (nodes instanceof Node) {\r\n      downgradeNode(nodes);\r\n    } else {\r\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\r\n    }\r\n  }\r\n\r\n  // Now return the functions that should be made public with their publicly\r\n  // facing names...\r\n  return {\r\n    upgradeDom: upgradeDomInternal,\r\n    upgradeElement: upgradeElementInternal,\r\n    upgradeElements: upgradeElementsInternal,\r\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\r\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\r\n    register: registerInternal,\r\n    downgradeElements: downgradeNodesInternal\r\n  };\r\n})();\r\n\r\n/**\r\n * Describes the type of a registered component type managed by\r\n * componentHandler. Provided for benefit of the Closure compiler.\r\n *\r\n * @typedef {{\r\n *   constructor: Function,\r\n *   classAsString: string,\r\n *   cssClass: string,\r\n *   widget: (string|boolean|undefined)\r\n * }}\r\n */\r\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\r\n\r\n/**\r\n * Describes the type of a registered component type managed by\r\n * componentHandler. Provided for benefit of the Closure compiler.\r\n *\r\n * @typedef {{\r\n *   constructor: !Function,\r\n *   className: string,\r\n *   cssClass: string,\r\n *   widget: (string|boolean),\r\n *   callbacks: !Array<function(!HTMLElement)>\r\n * }}\r\n */\r\ncomponentHandler.ComponentConfig;  // jshint ignore:line\r\n\r\n/**\r\n * Created component (i.e., upgraded element) type as managed by\r\n * componentHandler. Provided for benefit of the Closure compiler.\r\n *\r\n * @typedef {{\r\n *   element_: !HTMLElement,\r\n *   className: string,\r\n *   classAsString: string,\r\n *   cssClass: string,\r\n *   widget: string\r\n * }}\r\n */\r\ncomponentHandler.Component;  // jshint ignore:line\r\n\r\n// Export all symbols, for the benefit of Closure compiler.\r\n// No effect on uncompiled code.\r\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\r\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\r\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\r\ncomponentHandler['upgradeAllRegistered'] =\r\n    componentHandler.upgradeAllRegistered;\r\ncomponentHandler['registerUpgradedCallback'] =\r\n    componentHandler.registerUpgradedCallback;\r\ncomponentHandler['register'] = componentHandler.register;\r\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\r\nwindow.componentHandler = componentHandler;\r\nwindow['componentHandler'] = componentHandler;\r\n\r\nwindow.addEventListener('load', function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\r\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\r\n   * components requiring JavaScript.\r\n   */\r\n  if ('classList' in document.createElement('div') &&\r\n      'querySelector' in document &&\r\n      'addEventListener' in window && Array.prototype.forEach) {\r\n    document.documentElement.classList.add('mdl-js');\r\n    componentHandler.upgradeAllRegistered();\r\n  } else {\r\n    /**\r\n     * Dummy function to avoid JS errors.\r\n     */\r\n    componentHandler.upgradeElement = function() {};\r\n    /**\r\n     * Dummy function to avoid JS errors.\r\n     */\r\n    componentHandler.register = function() {};\r\n  }\r\n});\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Button MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialButton = function MaterialButton(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialButton'] = MaterialButton;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialButton.prototype.Constant_ = {\r\n    // None for now.\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialButton.prototype.CssClasses_ = {\r\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\r\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\r\n    RIPPLE: 'mdl-ripple'\r\n  };\r\n\r\n  /**\r\n   * Handle blur of element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialButton.prototype.blurHandler_ = function(event) {\r\n    if (event) {\r\n      this.element_.blur();\r\n    }\r\n  };\r\n\r\n  // Public methods.\r\n\r\n  /**\r\n   * Disable button.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialButton.prototype.disable = function() {\r\n    this.element_.disabled = true;\r\n  };\r\n  MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\r\n\r\n  /**\r\n   * Enable button.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialButton.prototype.enable = function() {\r\n    this.element_.disabled = false;\r\n  };\r\n  MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialButton.prototype.init = function() {\r\n    if (this.element_) {\r\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\r\n        var rippleContainer = document.createElement('span');\r\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\r\n        this.rippleElement_ = document.createElement('span');\r\n        this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\r\n        rippleContainer.appendChild(this.rippleElement_);\r\n        this.boundRippleBlurHandler = this.blurHandler_.bind(this);\r\n        this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\r\n        this.element_.appendChild(rippleContainer);\r\n      }\r\n      this.boundButtonBlurHandler = this.blurHandler_.bind(this);\r\n      this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\r\n      this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialButton,\r\n    classAsString: 'MaterialButton',\r\n    cssClass: 'mdl-js-button',\r\n    widget: true\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Checkbox MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialCheckbox = function MaterialCheckbox(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialCheckbox'] = MaterialCheckbox;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialCheckbox.prototype.Constant_ = {\r\n    TINY_TIMEOUT: 0.001\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialCheckbox.prototype.CssClasses_ = {\r\n    INPUT: 'mdl-checkbox__input',\r\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\r\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\r\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\r\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\r\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\r\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\r\n    RIPPLE_CENTER: 'mdl-ripple--center',\r\n    RIPPLE: 'mdl-ripple',\r\n    IS_FOCUSED: 'is-focused',\r\n    IS_DISABLED: 'is-disabled',\r\n    IS_CHECKED: 'is-checked',\r\n    IS_UPGRADED: 'is-upgraded'\r\n  };\r\n\r\n  /**\r\n   * Handle change of state.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialCheckbox.prototype.onChange_ = function(event) {\r\n    this.updateClasses_();\r\n  };\r\n\r\n  /**\r\n   * Handle focus of element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialCheckbox.prototype.onFocus_ = function(event) {\r\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\r\n  };\r\n\r\n  /**\r\n   * Handle lost focus of element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialCheckbox.prototype.onBlur_ = function(event) {\r\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\r\n  };\r\n\r\n  /**\r\n   * Handle mouseup.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialCheckbox.prototype.onMouseUp_ = function(event) {\r\n    this.blur_();\r\n  };\r\n\r\n  /**\r\n   * Handle class updates.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialCheckbox.prototype.updateClasses_ = function() {\r\n    this.checkDisabled();\r\n    this.checkToggleState();\r\n  };\r\n\r\n  /**\r\n   * Add blur.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialCheckbox.prototype.blur_ = function() {\r\n    // TODO: figure out why there's a focus event being fired after our blur,\r\n    // so that we can avoid this hack.\r\n    window.setTimeout(function() {\r\n      this.inputElement_.blur();\r\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\r\n  };\r\n\r\n  // Public methods.\r\n\r\n  /**\r\n   * Check the inputs toggle state and update display.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialCheckbox.prototype.checkToggleState = function() {\r\n    if (this.inputElement_.checked) {\r\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\r\n    }\r\n  };\r\n  MaterialCheckbox.prototype['checkToggleState'] =\r\n      MaterialCheckbox.prototype.checkToggleState;\r\n\r\n  /**\r\n   * Check the inputs disabled state and update display.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialCheckbox.prototype.checkDisabled = function() {\r\n    if (this.inputElement_.disabled) {\r\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\r\n    }\r\n  };\r\n  MaterialCheckbox.prototype['checkDisabled'] =\r\n      MaterialCheckbox.prototype.checkDisabled;\r\n\r\n  /**\r\n   * Disable checkbox.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialCheckbox.prototype.disable = function() {\r\n    this.inputElement_.disabled = true;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\r\n\r\n  /**\r\n   * Enable checkbox.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialCheckbox.prototype.enable = function() {\r\n    this.inputElement_.disabled = false;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\r\n\r\n  /**\r\n   * Check checkbox.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialCheckbox.prototype.check = function() {\r\n    this.inputElement_.checked = true;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\r\n\r\n  /**\r\n   * Uncheck checkbox.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialCheckbox.prototype.uncheck = function() {\r\n    this.inputElement_.checked = false;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialCheckbox.prototype.init = function() {\r\n    if (this.element_) {\r\n      this.inputElement_ = this.element_.querySelector('.' +\r\n          this.CssClasses_.INPUT);\r\n\r\n      var boxOutline = document.createElement('span');\r\n      boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\r\n\r\n      var tickContainer = document.createElement('span');\r\n      tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\r\n\r\n      var tickOutline = document.createElement('span');\r\n      tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\r\n\r\n      boxOutline.appendChild(tickOutline);\r\n\r\n      this.element_.appendChild(tickContainer);\r\n      this.element_.appendChild(boxOutline);\r\n\r\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\r\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\r\n        this.rippleContainerElement_ = document.createElement('span');\r\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\r\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\r\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\r\n        this.boundRippleMouseUp = this.onMouseUp_.bind(this);\r\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\r\n\r\n        var ripple = document.createElement('span');\r\n        ripple.classList.add(this.CssClasses_.RIPPLE);\r\n\r\n        this.rippleContainerElement_.appendChild(ripple);\r\n        this.element_.appendChild(this.rippleContainerElement_);\r\n      }\r\n      this.boundInputOnChange = this.onChange_.bind(this);\r\n      this.boundInputOnFocus = this.onFocus_.bind(this);\r\n      this.boundInputOnBlur = this.onBlur_.bind(this);\r\n      this.boundElementMouseUp = this.onMouseUp_.bind(this);\r\n      this.inputElement_.addEventListener('change', this.boundInputOnChange);\r\n      this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\r\n      this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\r\n      this.element_.addEventListener('mouseup', this.boundElementMouseUp);\r\n\r\n      this.updateClasses_();\r\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialCheckbox,\r\n    classAsString: 'MaterialCheckbox',\r\n    cssClass: 'mdl-js-checkbox',\r\n    widget: true\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for icon toggle MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialIconToggle = function MaterialIconToggle(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialIconToggle'] = MaterialIconToggle;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialIconToggle.prototype.Constant_ = {\r\n    TINY_TIMEOUT: 0.001\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialIconToggle.prototype.CssClasses_ = {\r\n    INPUT: 'mdl-icon-toggle__input',\r\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\r\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\r\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\r\n    RIPPLE_CENTER: 'mdl-ripple--center',\r\n    RIPPLE: 'mdl-ripple',\r\n    IS_FOCUSED: 'is-focused',\r\n    IS_DISABLED: 'is-disabled',\r\n    IS_CHECKED: 'is-checked'\r\n  };\r\n\r\n  /**\r\n   * Handle change of state.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialIconToggle.prototype.onChange_ = function(event) {\r\n    this.updateClasses_();\r\n  };\r\n\r\n  /**\r\n   * Handle focus of element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialIconToggle.prototype.onFocus_ = function(event) {\r\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\r\n  };\r\n\r\n  /**\r\n   * Handle lost focus of element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialIconToggle.prototype.onBlur_ = function(event) {\r\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\r\n  };\r\n\r\n  /**\r\n   * Handle mouseup.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialIconToggle.prototype.onMouseUp_ = function(event) {\r\n    this.blur_();\r\n  };\r\n\r\n  /**\r\n   * Handle class updates.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialIconToggle.prototype.updateClasses_ = function() {\r\n    this.checkDisabled();\r\n    this.checkToggleState();\r\n  };\r\n\r\n  /**\r\n   * Add blur.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialIconToggle.prototype.blur_ = function() {\r\n    // TODO: figure out why there's a focus event being fired after our blur,\r\n    // so that we can avoid this hack.\r\n    window.setTimeout(function() {\r\n      this.inputElement_.blur();\r\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\r\n  };\r\n\r\n  // Public methods.\r\n\r\n  /**\r\n   * Check the inputs toggle state and update display.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialIconToggle.prototype.checkToggleState = function() {\r\n    if (this.inputElement_.checked) {\r\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\r\n    }\r\n  };\r\n  MaterialIconToggle.prototype['checkToggleState'] =\r\n      MaterialIconToggle.prototype.checkToggleState;\r\n\r\n  /**\r\n   * Check the inputs disabled state and update display.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialIconToggle.prototype.checkDisabled = function() {\r\n    if (this.inputElement_.disabled) {\r\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\r\n    }\r\n  };\r\n  MaterialIconToggle.prototype['checkDisabled'] =\r\n      MaterialIconToggle.prototype.checkDisabled;\r\n\r\n  /**\r\n   * Disable icon toggle.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialIconToggle.prototype.disable = function() {\r\n    this.inputElement_.disabled = true;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialIconToggle.prototype['disable'] =\r\n      MaterialIconToggle.prototype.disable;\r\n\r\n  /**\r\n   * Enable icon toggle.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialIconToggle.prototype.enable = function() {\r\n    this.inputElement_.disabled = false;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\r\n\r\n  /**\r\n   * Check icon toggle.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialIconToggle.prototype.check = function() {\r\n    this.inputElement_.checked = true;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\r\n\r\n  /**\r\n   * Uncheck icon toggle.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialIconToggle.prototype.uncheck = function() {\r\n    this.inputElement_.checked = false;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialIconToggle.prototype['uncheck'] =\r\n      MaterialIconToggle.prototype.uncheck;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialIconToggle.prototype.init = function() {\r\n\r\n    if (this.element_) {\r\n      this.inputElement_ =\r\n          this.element_.querySelector('.' + this.CssClasses_.INPUT);\r\n\r\n      if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\r\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\r\n        this.rippleContainerElement_ = document.createElement('span');\r\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\r\n        this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\r\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\r\n        this.boundRippleMouseUp = this.onMouseUp_.bind(this);\r\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\r\n\r\n        var ripple = document.createElement('span');\r\n        ripple.classList.add(this.CssClasses_.RIPPLE);\r\n\r\n        this.rippleContainerElement_.appendChild(ripple);\r\n        this.element_.appendChild(this.rippleContainerElement_);\r\n      }\r\n\r\n      this.boundInputOnChange = this.onChange_.bind(this);\r\n      this.boundInputOnFocus = this.onFocus_.bind(this);\r\n      this.boundInputOnBlur = this.onBlur_.bind(this);\r\n      this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\r\n      this.inputElement_.addEventListener('change', this.boundInputOnChange);\r\n      this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\r\n      this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\r\n      this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\r\n\r\n      this.updateClasses_();\r\n      this.element_.classList.add('is-upgraded');\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialIconToggle,\r\n    classAsString: 'MaterialIconToggle',\r\n    cssClass: 'mdl-js-icon-toggle',\r\n    widget: true\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for dropdown MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialMenu = function MaterialMenu(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialMenu'] = MaterialMenu;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialMenu.prototype.Constant_ = {\r\n    // Total duration of the menu animation.\r\n    TRANSITION_DURATION_SECONDS: 0.3,\r\n    // The fraction of the total duration we want to use for menu item animations.\r\n    TRANSITION_DURATION_FRACTION: 0.8,\r\n    // How long the menu stays open after choosing an option (so the user can see\r\n    // the ripple).\r\n    CLOSE_TIMEOUT: 150\r\n  };\r\n\r\n  /**\r\n   * Keycodes, for code readability.\r\n   *\r\n   * @enum {number}\r\n   * @private\r\n   */\r\n  MaterialMenu.prototype.Keycodes_ = {\r\n    ENTER: 13,\r\n    ESCAPE: 27,\r\n    SPACE: 32,\r\n    UP_ARROW: 38,\r\n    DOWN_ARROW: 40\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialMenu.prototype.CssClasses_ = {\r\n    CONTAINER: 'mdl-menu__container',\r\n    OUTLINE: 'mdl-menu__outline',\r\n    ITEM: 'mdl-menu__item',\r\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\r\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\r\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\r\n    RIPPLE: 'mdl-ripple',\r\n    // Statuses\r\n    IS_UPGRADED: 'is-upgraded',\r\n    IS_VISIBLE: 'is-visible',\r\n    IS_ANIMATING: 'is-animating',\r\n    // Alignment options\r\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',  // This is the default.\r\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\r\n    TOP_LEFT: 'mdl-menu--top-left',\r\n    TOP_RIGHT: 'mdl-menu--top-right',\r\n    UNALIGNED: 'mdl-menu--unaligned'\r\n  };\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialMenu.prototype.init = function() {\r\n    if (this.element_) {\r\n      // Create container for the menu.\r\n      var container = document.createElement('div');\r\n      container.classList.add(this.CssClasses_.CONTAINER);\r\n      this.element_.parentElement.insertBefore(container, this.element_);\r\n      this.element_.parentElement.removeChild(this.element_);\r\n      container.appendChild(this.element_);\r\n      this.container_ = container;\r\n\r\n      // Create outline for the menu (shadow and background).\r\n      var outline = document.createElement('div');\r\n      outline.classList.add(this.CssClasses_.OUTLINE);\r\n      this.outline_ = outline;\r\n      container.insertBefore(outline, this.element_);\r\n\r\n      // Find the \"for\" element and bind events to it.\r\n      var forElId = this.element_.getAttribute('for') ||\r\n                      this.element_.getAttribute('data-mdl-for');\r\n      var forEl = null;\r\n      if (forElId) {\r\n        forEl = document.getElementById(forElId);\r\n        if (forEl) {\r\n          this.forElement_ = forEl;\r\n          forEl.addEventListener('click', this.handleForClick_.bind(this));\r\n          forEl.addEventListener('keydown',\r\n              this.handleForKeyboardEvent_.bind(this));\r\n        }\r\n      }\r\n\r\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\r\n      this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\r\n      this.boundItemClick_ = this.handleItemClick_.bind(this);\r\n      for (var i = 0; i < items.length; i++) {\r\n        // Add a listener to each menu item.\r\n        items[i].addEventListener('click', this.boundItemClick_);\r\n        // Add a tab index to each menu item.\r\n        items[i].tabIndex = '-1';\r\n        // Add a keyboard listener to each menu item.\r\n        items[i].addEventListener('keydown', this.boundItemKeydown_);\r\n      }\r\n\r\n      // Add ripple classes to each item, if the user has enabled ripples.\r\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\r\n        this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\r\n\r\n        for (i = 0; i < items.length; i++) {\r\n          var item = items[i];\r\n\r\n          var rippleContainer = document.createElement('span');\r\n          rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\r\n\r\n          var ripple = document.createElement('span');\r\n          ripple.classList.add(this.CssClasses_.RIPPLE);\r\n          rippleContainer.appendChild(ripple);\r\n\r\n          item.appendChild(rippleContainer);\r\n          item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\r\n        }\r\n      }\r\n\r\n      // Copy alignment classes to the container, so the outline can use them.\r\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\r\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\r\n      }\r\n      if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\r\n        this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\r\n      }\r\n      if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\r\n        this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\r\n      }\r\n      if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\r\n        this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\r\n      }\r\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\r\n        this.outline_.classList.add(this.CssClasses_.UNALIGNED);\r\n      }\r\n\r\n      container.classList.add(this.CssClasses_.IS_UPGRADED);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles a click on the \"for\" element, by positioning the menu and then\r\n   * toggling it.\r\n   *\r\n   * @param {Event} evt The event that fired.\r\n   * @private\r\n   */\r\n  MaterialMenu.prototype.handleForClick_ = function(evt) {\r\n    if (this.element_ && this.forElement_) {\r\n      var rect = this.forElement_.getBoundingClientRect();\r\n      var forRect = this.forElement_.parentElement.getBoundingClientRect();\r\n\r\n      if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\r\n        // Do not position the menu automatically. Requires the developer to\r\n        // manually specify position.\r\n      } else if (this.element_.classList.contains(\r\n          this.CssClasses_.BOTTOM_RIGHT)) {\r\n        // Position below the \"for\" element, aligned to its right.\r\n        this.container_.style.right = (forRect.right - rect.right) + 'px';\r\n        this.container_.style.top =\r\n            this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\r\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\r\n        // Position above the \"for\" element, aligned to its left.\r\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\r\n        this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\r\n      } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\r\n        // Position above the \"for\" element, aligned to its right.\r\n        this.container_.style.right = (forRect.right - rect.right) + 'px';\r\n        this.container_.style.bottom = (forRect.bottom - rect.top) + 'px';\r\n      } else {\r\n        // Default: position below the \"for\" element, aligned to its left.\r\n        this.container_.style.left = this.forElement_.offsetLeft + 'px';\r\n        this.container_.style.top =\r\n            this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\r\n      }\r\n    }\r\n\r\n    this.toggle(evt);\r\n  };\r\n\r\n  /**\r\n   * Handles a keyboard event on the \"for\" element.\r\n   *\r\n   * @param {Event} evt The event that fired.\r\n   * @private\r\n   */\r\n  MaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {\r\n    if (this.element_ && this.container_ && this.forElement_) {\r\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\r\n        ':not([disabled])');\r\n\r\n      if (items && items.length > 0 &&\r\n          this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\r\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\r\n          evt.preventDefault();\r\n          items[items.length - 1].focus();\r\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\r\n          evt.preventDefault();\r\n          items[0].focus();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles a keyboard event on an item.\r\n   *\r\n   * @param {Event} evt The event that fired.\r\n   * @private\r\n   */\r\n  MaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {\r\n    if (this.element_ && this.container_) {\r\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM +\r\n        ':not([disabled])');\r\n\r\n      if (items && items.length > 0 &&\r\n          this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\r\n        var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\r\n\r\n        if (evt.keyCode === this.Keycodes_.UP_ARROW) {\r\n          evt.preventDefault();\r\n          if (currentIndex > 0) {\r\n            items[currentIndex - 1].focus();\r\n          } else {\r\n            items[items.length - 1].focus();\r\n          }\r\n        } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\r\n          evt.preventDefault();\r\n          if (items.length > currentIndex + 1) {\r\n            items[currentIndex + 1].focus();\r\n          } else {\r\n            items[0].focus();\r\n          }\r\n        } else if (evt.keyCode === this.Keycodes_.SPACE ||\r\n              evt.keyCode === this.Keycodes_.ENTER) {\r\n          evt.preventDefault();\r\n          // Send mousedown and mouseup to trigger ripple.\r\n          var e = new MouseEvent('mousedown');\r\n          evt.target.dispatchEvent(e);\r\n          e = new MouseEvent('mouseup');\r\n          evt.target.dispatchEvent(e);\r\n          // Send click.\r\n          evt.target.click();\r\n        } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\r\n          evt.preventDefault();\r\n          this.hide();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles a click event on an item.\r\n   *\r\n   * @param {Event} evt The event that fired.\r\n   * @private\r\n   */\r\n  MaterialMenu.prototype.handleItemClick_ = function(evt) {\r\n    if (evt.target.hasAttribute('disabled')) {\r\n      evt.stopPropagation();\r\n    } else {\r\n      // Wait some time before closing menu, so the user can see the ripple.\r\n      this.closing_ = true;\r\n      window.setTimeout(function(evt) {\r\n        this.hide();\r\n        this.closing_ = false;\r\n      }.bind(this), /** @type {number} */ (this.Constant_.CLOSE_TIMEOUT));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\r\n   * it), and applies it. This allows us to animate from or to the correct point,\r\n   * that is, the point it's aligned to in the \"for\" element.\r\n   *\r\n   * @param {number} height Height of the clip rectangle\r\n   * @param {number} width Width of the clip rectangle\r\n   * @private\r\n   */\r\n  MaterialMenu.prototype.applyClip_ = function(height, width) {\r\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\r\n      // Do not clip.\r\n      this.element_.style.clip = '';\r\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\r\n      // Clip to the top right corner of the menu.\r\n      this.element_.style.clip =\r\n          'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\r\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\r\n      // Clip to the bottom left corner of the menu.\r\n      this.element_.style.clip =\r\n          'rect(' + height + 'px 0 ' + height + 'px 0)';\r\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\r\n      // Clip to the bottom right corner of the menu.\r\n      this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' +\r\n          height + 'px ' + width + 'px)';\r\n    } else {\r\n      // Default: do not clip (same as clipping to the top left corner).\r\n      this.element_.style.clip = '';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Cleanup function to remove animation listeners.\r\n   *\r\n   * @param {Event} evt\r\n   * @private\r\n   */\r\n\r\n  MaterialMenu.prototype.removeAnimationEndListener_ = function(evt) {\r\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\r\n  };\r\n\r\n  /**\r\n   * Adds an event listener to clean up after the animation ends.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialMenu.prototype.addAnimationEndListener_ = function() {\r\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\r\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\r\n  };\r\n\r\n  /**\r\n   * Displays the menu.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialMenu.prototype.show = function(evt) {\r\n    if (this.element_ && this.container_ && this.outline_) {\r\n      // Measure the inner element.\r\n      var height = this.element_.getBoundingClientRect().height;\r\n      var width = this.element_.getBoundingClientRect().width;\r\n\r\n      // Apply the inner element's size to the container and outline.\r\n      this.container_.style.width = width + 'px';\r\n      this.container_.style.height = height + 'px';\r\n      this.outline_.style.width = width + 'px';\r\n      this.outline_.style.height = height + 'px';\r\n\r\n      var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS *\r\n          this.Constant_.TRANSITION_DURATION_FRACTION;\r\n\r\n      // Calculate transition delays for individual menu items, so that they fade\r\n      // in one at a time.\r\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\r\n      for (var i = 0; i < items.length; i++) {\r\n        var itemDelay = null;\r\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) ||\r\n            this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\r\n          itemDelay = ((height - items[i].offsetTop - items[i].offsetHeight) /\r\n              height * transitionDuration) + 's';\r\n        } else {\r\n          itemDelay = (items[i].offsetTop / height * transitionDuration) + 's';\r\n        }\r\n        items[i].style.transitionDelay = itemDelay;\r\n      }\r\n\r\n      // Apply the initial clip to the text before we start animating.\r\n      this.applyClip_(height, width);\r\n\r\n      // Wait for the next frame, turn on animation, and apply the final clip.\r\n      // Also make it visible. This triggers the transitions.\r\n      window.requestAnimationFrame(function() {\r\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\r\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\r\n        this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\r\n      }.bind(this));\r\n\r\n      // Clean up after the animation is complete.\r\n      this.addAnimationEndListener_();\r\n\r\n      // Add a click listener to the document, to close the menu.\r\n      var callback = function(e) {\r\n        // Check to see if the document is processing the same event that\r\n        // displayed the menu in the first place. If so, do nothing.\r\n        // Also check to see if the menu is in the process of closing itself, and\r\n        // do nothing in that case.\r\n        // Also check if the clicked element is a menu item\r\n        // if so, do nothing.\r\n        if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\r\n          document.removeEventListener('click', callback);\r\n          this.hide();\r\n        }\r\n      }.bind(this);\r\n      document.addEventListener('click', callback);\r\n    }\r\n  };\r\n  MaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\r\n\r\n  /**\r\n   * Hides the menu.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialMenu.prototype.hide = function() {\r\n    if (this.element_ && this.container_ && this.outline_) {\r\n      var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\r\n\r\n      // Remove all transition delays; menu items fade out concurrently.\r\n      for (var i = 0; i < items.length; i++) {\r\n        items[i].style.removeProperty('transition-delay');\r\n      }\r\n\r\n      // Measure the inner element.\r\n      var rect = this.element_.getBoundingClientRect();\r\n      var height = rect.height;\r\n      var width = rect.width;\r\n\r\n      // Turn on animation, and apply the final clip. Also make invisible.\r\n      // This triggers the transitions.\r\n      this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\r\n      this.applyClip_(height, width);\r\n      this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\r\n\r\n      // Clean up after the animation is complete.\r\n      this.addAnimationEndListener_();\r\n    }\r\n  };\r\n  MaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\r\n\r\n  /**\r\n   * Displays or hides the menu, depending on current state.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialMenu.prototype.toggle = function(evt) {\r\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\r\n      this.hide();\r\n    } else {\r\n      this.show(evt);\r\n    }\r\n  };\r\n  MaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialMenu,\r\n    classAsString: 'MaterialMenu',\r\n    cssClass: 'mdl-js-menu',\r\n    widget: true\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Progress MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialProgress = function MaterialProgress(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialProgress'] = MaterialProgress;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialProgress.prototype.Constant_ = {\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialProgress.prototype.CssClasses_ = {\r\n    INDETERMINATE_CLASS: 'mdl-progress__indeterminate'\r\n  };\r\n\r\n  /**\r\n   * Set the current progress of the progressbar.\r\n   *\r\n   * @param {number} p Percentage of the progress (0-100)\r\n   * @public\r\n   */\r\n  MaterialProgress.prototype.setProgress = function(p) {\r\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\r\n      return;\r\n    }\r\n\r\n    this.progressbar_.style.width = p + '%';\r\n  };\r\n  MaterialProgress.prototype['setProgress'] =\r\n      MaterialProgress.prototype.setProgress;\r\n\r\n  /**\r\n   * Set the current progress of the buffer.\r\n   *\r\n   * @param {number} p Percentage of the buffer (0-100)\r\n   * @public\r\n   */\r\n  MaterialProgress.prototype.setBuffer = function(p) {\r\n    this.bufferbar_.style.width = p + '%';\r\n    this.auxbar_.style.width = (100 - p) + '%';\r\n  };\r\n  MaterialProgress.prototype['setBuffer'] =\r\n      MaterialProgress.prototype.setBuffer;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialProgress.prototype.init = function() {\r\n    if (this.element_) {\r\n      var el = document.createElement('div');\r\n      el.className = 'progressbar bar bar1';\r\n      this.element_.appendChild(el);\r\n      this.progressbar_ = el;\r\n\r\n      el = document.createElement('div');\r\n      el.className = 'bufferbar bar bar2';\r\n      this.element_.appendChild(el);\r\n      this.bufferbar_ = el;\r\n\r\n      el = document.createElement('div');\r\n      el.className = 'auxbar bar bar3';\r\n      this.element_.appendChild(el);\r\n      this.auxbar_ = el;\r\n\r\n      this.progressbar_.style.width = '0%';\r\n      this.bufferbar_.style.width = '100%';\r\n      this.auxbar_.style.width = '0%';\r\n\r\n      this.element_.classList.add('is-upgraded');\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialProgress,\r\n    classAsString: 'MaterialProgress',\r\n    cssClass: 'mdl-js-progress',\r\n    widget: true\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Radio MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialRadio = function MaterialRadio(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialRadio'] = MaterialRadio;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialRadio.prototype.Constant_ = {\r\n    TINY_TIMEOUT: 0.001\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialRadio.prototype.CssClasses_ = {\r\n    IS_FOCUSED: 'is-focused',\r\n    IS_DISABLED: 'is-disabled',\r\n    IS_CHECKED: 'is-checked',\r\n    IS_UPGRADED: 'is-upgraded',\r\n    JS_RADIO: 'mdl-js-radio',\r\n    RADIO_BTN: 'mdl-radio__button',\r\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\r\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\r\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\r\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\r\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\r\n    RIPPLE_CENTER: 'mdl-ripple--center',\r\n    RIPPLE: 'mdl-ripple'\r\n  };\r\n\r\n  /**\r\n   * Handle change of state.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialRadio.prototype.onChange_ = function(event) {\r\n    // Since other radio buttons don't get change events, we need to look for\r\n    // them to update their classes.\r\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\r\n    for (var i = 0; i < radios.length; i++) {\r\n      var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\r\n      // Different name == different group, so no point updating those.\r\n      if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\r\n        if (typeof radios[i]['MaterialRadio'] !== 'undefined') {\r\n          radios[i]['MaterialRadio'].updateClasses_();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle focus.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialRadio.prototype.onFocus_ = function(event) {\r\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\r\n  };\r\n\r\n  /**\r\n   * Handle lost focus.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialRadio.prototype.onBlur_ = function(event) {\r\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\r\n  };\r\n\r\n  /**\r\n   * Handle mouseup.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialRadio.prototype.onMouseup_ = function(event) {\r\n    this.blur_();\r\n  };\r\n\r\n  /**\r\n   * Update classes.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialRadio.prototype.updateClasses_ = function() {\r\n    this.checkDisabled();\r\n    this.checkToggleState();\r\n  };\r\n\r\n  /**\r\n   * Add blur.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialRadio.prototype.blur_ = function() {\r\n\r\n    // TODO: figure out why there's a focus event being fired after our blur,\r\n    // so that we can avoid this hack.\r\n    window.setTimeout(function() {\r\n      this.btnElement_.blur();\r\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\r\n  };\r\n\r\n  // Public methods.\r\n\r\n  /**\r\n   * Check the components disabled state.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialRadio.prototype.checkDisabled = function() {\r\n    if (this.btnElement_.disabled) {\r\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\r\n    }\r\n  };\r\n  MaterialRadio.prototype['checkDisabled'] =\r\n      MaterialRadio.prototype.checkDisabled;\r\n\r\n  /**\r\n   * Check the components toggled state.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialRadio.prototype.checkToggleState = function() {\r\n    if (this.btnElement_.checked) {\r\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\r\n    }\r\n  };\r\n  MaterialRadio.prototype['checkToggleState'] =\r\n      MaterialRadio.prototype.checkToggleState;\r\n\r\n  /**\r\n   * Disable radio.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialRadio.prototype.disable = function() {\r\n    this.btnElement_.disabled = true;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\r\n\r\n  /**\r\n   * Enable radio.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialRadio.prototype.enable = function() {\r\n    this.btnElement_.disabled = false;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\r\n\r\n  /**\r\n   * Check radio.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialRadio.prototype.check = function() {\r\n    this.btnElement_.checked = true;\r\n    this.onChange_(null);\r\n  };\r\n  MaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\r\n\r\n  /**\r\n   * Uncheck radio.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialRadio.prototype.uncheck = function() {\r\n    this.btnElement_.checked = false;\r\n    this.onChange_(null);\r\n  };\r\n  MaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialRadio.prototype.init = function() {\r\n    if (this.element_) {\r\n      this.btnElement_ = this.element_.querySelector('.' +\r\n          this.CssClasses_.RADIO_BTN);\r\n\r\n      this.boundChangeHandler_ = this.onChange_.bind(this);\r\n      this.boundFocusHandler_ = this.onChange_.bind(this);\r\n      this.boundBlurHandler_ = this.onBlur_.bind(this);\r\n      this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\r\n\r\n      var outerCircle = document.createElement('span');\r\n      outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\r\n\r\n      var innerCircle = document.createElement('span');\r\n      innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\r\n\r\n      this.element_.appendChild(outerCircle);\r\n      this.element_.appendChild(innerCircle);\r\n\r\n      var rippleContainer;\r\n      if (this.element_.classList.contains(\r\n          this.CssClasses_.RIPPLE_EFFECT)) {\r\n        this.element_.classList.add(\r\n            this.CssClasses_.RIPPLE_IGNORE_EVENTS);\r\n        rippleContainer = document.createElement('span');\r\n        rippleContainer.classList.add(\r\n            this.CssClasses_.RIPPLE_CONTAINER);\r\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\r\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\r\n        rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\r\n\r\n        var ripple = document.createElement('span');\r\n        ripple.classList.add(this.CssClasses_.RIPPLE);\r\n\r\n        rippleContainer.appendChild(ripple);\r\n        this.element_.appendChild(rippleContainer);\r\n      }\r\n\r\n      this.btnElement_.addEventListener('change', this.boundChangeHandler_);\r\n      this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\r\n      this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\r\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\r\n\r\n      this.updateClasses_();\r\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialRadio,\r\n    classAsString: 'MaterialRadio',\r\n    cssClass: 'mdl-js-radio',\r\n    widget: true\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Slider MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialSlider = function MaterialSlider(element) {\r\n    this.element_ = element;\r\n    // Browser feature detection.\r\n    this.isIE_ = window.navigator.msPointerEnabled;\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialSlider'] = MaterialSlider;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialSlider.prototype.Constant_ = {\r\n    // None for now.\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialSlider.prototype.CssClasses_ = {\r\n    IE_CONTAINER: 'mdl-slider__ie-container',\r\n    SLIDER_CONTAINER: 'mdl-slider__container',\r\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\r\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\r\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\r\n    IS_LOWEST_VALUE: 'is-lowest-value',\r\n    IS_UPGRADED: 'is-upgraded'\r\n  };\r\n\r\n  /**\r\n   * Handle input on element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialSlider.prototype.onInput_ = function(event) {\r\n    this.updateValueStyles_();\r\n  };\r\n\r\n  /**\r\n   * Handle change on element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialSlider.prototype.onChange_ = function(event) {\r\n    this.updateValueStyles_();\r\n  };\r\n\r\n  /**\r\n   * Handle mouseup on element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialSlider.prototype.onMouseUp_ = function(event) {\r\n    event.target.blur();\r\n  };\r\n\r\n  /**\r\n   * Handle mousedown on container element.\r\n   * This handler is purpose is to not require the use to click\r\n   * exactly on the 2px slider element, as FireFox seems to be very\r\n   * strict about this.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   * @suppress {missingProperties}\r\n   */\r\n  MaterialSlider.prototype.onContainerMouseDown_ = function(event) {\r\n    // If this click is not on the parent element (but rather some child)\r\n    // ignore. It may still bubble up.\r\n    if (event.target !== this.element_.parentElement) {\r\n      return;\r\n    }\r\n\r\n    // Discard the original event and create a new event that\r\n    // is on the slider element.\r\n    event.preventDefault();\r\n    var newEvent = new MouseEvent('mousedown', {\r\n      target: event.target,\r\n      buttons: event.buttons,\r\n      clientX: event.clientX,\r\n      clientY: this.element_.getBoundingClientRect().y\r\n    });\r\n    this.element_.dispatchEvent(newEvent);\r\n  };\r\n\r\n  /**\r\n   * Handle updating of values.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialSlider.prototype.updateValueStyles_ = function() {\r\n    // Calculate and apply percentages to div structure behind slider.\r\n    var fraction = (this.element_.value - this.element_.min) /\r\n        (this.element_.max - this.element_.min);\r\n\r\n    if (fraction === 0) {\r\n      this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\r\n    }\r\n\r\n    if (!this.isIE_) {\r\n      this.backgroundLower_.style.flex = fraction;\r\n      this.backgroundLower_.style.webkitFlex = fraction;\r\n      this.backgroundUpper_.style.flex = 1 - fraction;\r\n      this.backgroundUpper_.style.webkitFlex = 1 - fraction;\r\n    }\r\n  };\r\n\r\n  // Public methods.\r\n\r\n  /**\r\n   * Disable slider.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialSlider.prototype.disable = function() {\r\n    this.element_.disabled = true;\r\n  };\r\n  MaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\r\n\r\n  /**\r\n   * Enable slider.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialSlider.prototype.enable = function() {\r\n\r\n    this.element_.disabled = false;\r\n  };\r\n  MaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\r\n\r\n  /**\r\n   * Update slider value.\r\n   *\r\n   * @param {number} value The value to which to set the control (optional).\r\n   * @public\r\n   */\r\n  MaterialSlider.prototype.change = function(value) {\r\n\r\n    if (typeof value !== 'undefined') {\r\n      this.element_.value = value;\r\n    }\r\n    this.updateValueStyles_();\r\n  };\r\n  MaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialSlider.prototype.init = function() {\r\n\r\n    if (this.element_) {\r\n      if (this.isIE_) {\r\n        // Since we need to specify a very large height in IE due to\r\n        // implementation limitations, we add a parent here that trims it down to\r\n        // a reasonable size.\r\n        var containerIE = document.createElement('div');\r\n        containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\r\n        this.element_.parentElement.insertBefore(containerIE, this.element_);\r\n        this.element_.parentElement.removeChild(this.element_);\r\n        containerIE.appendChild(this.element_);\r\n      } else {\r\n        // For non-IE browsers, we need a div structure that sits behind the\r\n        // slider and allows us to style the left and right sides of it with\r\n        // different colors.\r\n        var container = document.createElement('div');\r\n        container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\r\n        this.element_.parentElement.insertBefore(container, this.element_);\r\n        this.element_.parentElement.removeChild(this.element_);\r\n        container.appendChild(this.element_);\r\n        var backgroundFlex = document.createElement('div');\r\n        backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\r\n        container.appendChild(backgroundFlex);\r\n        this.backgroundLower_ = document.createElement('div');\r\n        this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\r\n        backgroundFlex.appendChild(this.backgroundLower_);\r\n        this.backgroundUpper_ = document.createElement('div');\r\n        this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\r\n        backgroundFlex.appendChild(this.backgroundUpper_);\r\n      }\r\n\r\n      this.boundInputHandler = this.onInput_.bind(this);\r\n      this.boundChangeHandler = this.onChange_.bind(this);\r\n      this.boundMouseUpHandler = this.onMouseUp_.bind(this);\r\n      this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\r\n      this.element_.addEventListener('input', this.boundInputHandler);\r\n      this.element_.addEventListener('change', this.boundChangeHandler);\r\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\r\n      this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\r\n\r\n      this.updateValueStyles_();\r\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialSlider,\r\n    classAsString: 'MaterialSlider',\r\n    cssClass: 'mdl-js-slider',\r\n    widget: true\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Spinner MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   * @constructor\r\n   */\r\n  var MaterialSpinner = function MaterialSpinner(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialSpinner'] = MaterialSpinner;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialSpinner.prototype.Constant_ = {\r\n    MDL_SPINNER_LAYER_COUNT: 4\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialSpinner.prototype.CssClasses_ = {\r\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\r\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\r\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\r\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\r\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\r\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\r\n  };\r\n\r\n  /**\r\n   * Auxiliary method to create a spinner layer.\r\n   *\r\n   * @param {number} index Index of the layer to be created.\r\n   * @public\r\n   */\r\n  MaterialSpinner.prototype.createLayer = function(index) {\r\n    var layer = document.createElement('div');\r\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\r\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\r\n\r\n    var leftClipper = document.createElement('div');\r\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\r\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\r\n\r\n    var gapPatch = document.createElement('div');\r\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\r\n\r\n    var rightClipper = document.createElement('div');\r\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\r\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\r\n\r\n    var circleOwners = [leftClipper, gapPatch, rightClipper];\r\n\r\n    for (var i = 0; i < circleOwners.length; i++) {\r\n      var circle = document.createElement('div');\r\n      circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\r\n      circleOwners[i].appendChild(circle);\r\n    }\r\n\r\n    layer.appendChild(leftClipper);\r\n    layer.appendChild(gapPatch);\r\n    layer.appendChild(rightClipper);\r\n\r\n    this.element_.appendChild(layer);\r\n  };\r\n  MaterialSpinner.prototype['createLayer'] =\r\n      MaterialSpinner.prototype.createLayer;\r\n\r\n  /**\r\n   * Stops the spinner animation.\r\n   * Public method for users who need to stop the spinner for any reason.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialSpinner.prototype.stop = function() {\r\n    this.element_.classList.remove('is-active');\r\n  };\r\n  MaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\r\n\r\n  /**\r\n   * Starts the spinner animation.\r\n   * Public method for users who need to manually start the spinner for any reason\r\n   * (instead of just adding the 'is-active' class to their markup).\r\n   *\r\n   * @public\r\n   */\r\n  MaterialSpinner.prototype.start = function() {\r\n    this.element_.classList.add('is-active');\r\n  };\r\n  MaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialSpinner.prototype.init = function() {\r\n    if (this.element_) {\r\n      for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\r\n        this.createLayer(i);\r\n      }\r\n\r\n      this.element_.classList.add('is-upgraded');\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialSpinner,\r\n    classAsString: 'MaterialSpinner',\r\n    cssClass: 'mdl-js-spinner',\r\n    widget: true\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Checkbox MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialSwitch = function MaterialSwitch(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialSwitch'] = MaterialSwitch;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialSwitch.prototype.Constant_ = {\r\n    TINY_TIMEOUT: 0.001\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialSwitch.prototype.CssClasses_ = {\r\n    INPUT: 'mdl-switch__input',\r\n    TRACK: 'mdl-switch__track',\r\n    THUMB: 'mdl-switch__thumb',\r\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\r\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\r\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\r\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\r\n    RIPPLE_CENTER: 'mdl-ripple--center',\r\n    RIPPLE: 'mdl-ripple',\r\n    IS_FOCUSED: 'is-focused',\r\n    IS_DISABLED: 'is-disabled',\r\n    IS_CHECKED: 'is-checked'\r\n  };\r\n\r\n  /**\r\n   * Handle change of state.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialSwitch.prototype.onChange_ = function(event) {\r\n    this.updateClasses_();\r\n  };\r\n\r\n  /**\r\n   * Handle focus of element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialSwitch.prototype.onFocus_ = function(event) {\r\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\r\n  };\r\n\r\n  /**\r\n   * Handle lost focus of element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialSwitch.prototype.onBlur_ = function(event) {\r\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\r\n  };\r\n\r\n  /**\r\n   * Handle mouseup.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialSwitch.prototype.onMouseUp_ = function(event) {\r\n    this.blur_();\r\n  };\r\n\r\n  /**\r\n   * Handle class updates.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialSwitch.prototype.updateClasses_ = function() {\r\n    this.checkDisabled();\r\n    this.checkToggleState();\r\n  };\r\n\r\n  /**\r\n   * Add blur.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialSwitch.prototype.blur_ = function() {\r\n    // TODO: figure out why there's a focus event being fired after our blur,\r\n    // so that we can avoid this hack.\r\n    window.setTimeout(function() {\r\n      this.inputElement_.blur();\r\n    }.bind(this), /** @type {number} */ (this.Constant_.TINY_TIMEOUT));\r\n  };\r\n\r\n  // Public methods.\r\n\r\n  /**\r\n   * Check the components disabled state.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialSwitch.prototype.checkDisabled = function() {\r\n    if (this.inputElement_.disabled) {\r\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\r\n    }\r\n  };\r\n  MaterialSwitch.prototype['checkDisabled'] =\r\n      MaterialSwitch.prototype.checkDisabled;\r\n\r\n  /**\r\n   * Check the components toggled state.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialSwitch.prototype.checkToggleState = function() {\r\n    if (this.inputElement_.checked) {\r\n      this.element_.classList.add(this.CssClasses_.IS_CHECKED);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\r\n    }\r\n  };\r\n  MaterialSwitch.prototype['checkToggleState'] =\r\n      MaterialSwitch.prototype.checkToggleState;\r\n\r\n  /**\r\n   * Disable switch.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialSwitch.prototype.disable = function() {\r\n    this.inputElement_.disabled = true;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\r\n\r\n  /**\r\n   * Enable switch.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialSwitch.prototype.enable = function() {\r\n    this.inputElement_.disabled = false;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\r\n\r\n  /**\r\n   * Activate switch.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialSwitch.prototype.on = function() {\r\n    this.inputElement_.checked = true;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\r\n\r\n  /**\r\n   * Deactivate switch.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialSwitch.prototype.off = function() {\r\n    this.inputElement_.checked = false;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialSwitch.prototype.init = function() {\r\n    if (this.element_) {\r\n      this.inputElement_ = this.element_.querySelector('.' +\r\n          this.CssClasses_.INPUT);\r\n\r\n      var track = document.createElement('div');\r\n      track.classList.add(this.CssClasses_.TRACK);\r\n\r\n      var thumb = document.createElement('div');\r\n      thumb.classList.add(this.CssClasses_.THUMB);\r\n\r\n      var focusHelper = document.createElement('span');\r\n      focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\r\n\r\n      thumb.appendChild(focusHelper);\r\n\r\n      this.element_.appendChild(track);\r\n      this.element_.appendChild(thumb);\r\n\r\n      this.boundMouseUpHandler = this.onMouseUp_.bind(this);\r\n\r\n      if (this.element_.classList.contains(\r\n          this.CssClasses_.RIPPLE_EFFECT)) {\r\n        this.element_.classList.add(\r\n            this.CssClasses_.RIPPLE_IGNORE_EVENTS);\r\n        this.rippleContainerElement_ = document.createElement('span');\r\n        this.rippleContainerElement_.classList.add(\r\n            this.CssClasses_.RIPPLE_CONTAINER);\r\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\r\n        this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\r\n        this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\r\n\r\n        var ripple = document.createElement('span');\r\n        ripple.classList.add(this.CssClasses_.RIPPLE);\r\n\r\n        this.rippleContainerElement_.appendChild(ripple);\r\n        this.element_.appendChild(this.rippleContainerElement_);\r\n      }\r\n\r\n      this.boundChangeHandler = this.onChange_.bind(this);\r\n      this.boundFocusHandler = this.onFocus_.bind(this);\r\n      this.boundBlurHandler = this.onBlur_.bind(this);\r\n\r\n      this.inputElement_.addEventListener('change', this.boundChangeHandler);\r\n      this.inputElement_.addEventListener('focus', this.boundFocusHandler);\r\n      this.inputElement_.addEventListener('blur', this.boundBlurHandler);\r\n      this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\r\n\r\n      this.updateClasses_();\r\n      this.element_.classList.add('is-upgraded');\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialSwitch,\r\n    classAsString: 'MaterialSwitch',\r\n    cssClass: 'mdl-js-switch',\r\n    widget: true\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Tabs MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {Element} element The element that will be upgraded.\r\n   */\r\n  var MaterialTabs = function MaterialTabs(element) {\r\n    // Stores the HTML element.\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialTabs'] = MaterialTabs;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialTabs.prototype.Constant_ = {\r\n    // None at the moment.\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialTabs.prototype.CssClasses_ = {\r\n    TAB_CLASS: 'mdl-tabs__tab',\r\n    PANEL_CLASS: 'mdl-tabs__panel',\r\n    ACTIVE_CLASS: 'is-active',\r\n    UPGRADED_CLASS: 'is-upgraded',\r\n\r\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\r\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\r\n    MDL_RIPPLE: 'mdl-ripple',\r\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\r\n  };\r\n\r\n  /**\r\n   * Handle clicks to a tabs component\r\n   *\r\n   * @private\r\n   */\r\n  MaterialTabs.prototype.initTabs_ = function() {\r\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\r\n      this.element_.classList.add(\r\n        this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\r\n    }\r\n\r\n    // Select element tabs, document panels\r\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\r\n    this.panels_ =\r\n        this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\r\n\r\n    // Create new tabs for each tab element\r\n    for (var i = 0; i < this.tabs_.length; i++) {\r\n      new MaterialTab(this.tabs_[i], this);\r\n    }\r\n\r\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\r\n  };\r\n\r\n  /**\r\n   * Reset tab state, dropping active classes\r\n   *\r\n   * @private\r\n   */\r\n  MaterialTabs.prototype.resetTabState_ = function() {\r\n    for (var k = 0; k < this.tabs_.length; k++) {\r\n      this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reset panel state, droping active classes\r\n   *\r\n   * @private\r\n   */\r\n  MaterialTabs.prototype.resetPanelState_ = function() {\r\n    for (var j = 0; j < this.panels_.length; j++) {\r\n      this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialTabs.prototype.init = function() {\r\n    if (this.element_) {\r\n      this.initTabs_();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Constructor for an individual tab.\r\n   *\r\n   * @constructor\r\n   * @param {Element} tab The HTML element for the tab.\r\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\r\n   */\r\n  function MaterialTab(tab, ctx) {\r\n    if (tab) {\r\n      if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\r\n        var rippleContainer = document.createElement('span');\r\n        rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\r\n        rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\r\n        var ripple = document.createElement('span');\r\n        ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\r\n        rippleContainer.appendChild(ripple);\r\n        tab.appendChild(rippleContainer);\r\n      }\r\n\r\n      tab.addEventListener('click', function(e) {\r\n        if (tab.getAttribute('href').charAt(0) === '#') {\r\n          e.preventDefault();\r\n          var href = tab.href.split('#')[1];\r\n          var panel = ctx.element_.querySelector('#' + href);\r\n          ctx.resetTabState_();\r\n          ctx.resetPanelState_();\r\n          tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\r\n          panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialTabs,\r\n    classAsString: 'MaterialTabs',\r\n    cssClass: 'mdl-js-tabs'\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Textfield MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialTextfield = function MaterialTextfield(element) {\r\n    this.element_ = element;\r\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialTextfield'] = MaterialTextfield;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialTextfield.prototype.Constant_ = {\r\n    NO_MAX_ROWS: -1,\r\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialTextfield.prototype.CssClasses_ = {\r\n    LABEL: 'mdl-textfield__label',\r\n    INPUT: 'mdl-textfield__input',\r\n    IS_DIRTY: 'is-dirty',\r\n    IS_FOCUSED: 'is-focused',\r\n    IS_DISABLED: 'is-disabled',\r\n    IS_INVALID: 'is-invalid',\r\n    IS_UPGRADED: 'is-upgraded',\r\n    HAS_PLACEHOLDER: 'has-placeholder'\r\n  };\r\n\r\n  /**\r\n   * Handle input being entered.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialTextfield.prototype.onKeyDown_ = function(event) {\r\n    var currentRowCount = event.target.value.split('\\n').length;\r\n    if (event.keyCode === 13) {\r\n      if (currentRowCount >= this.maxRows) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle focus.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialTextfield.prototype.onFocus_ = function(event) {\r\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\r\n  };\r\n\r\n  /**\r\n   * Handle lost focus.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialTextfield.prototype.onBlur_ = function(event) {\r\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\r\n  };\r\n\r\n  /**\r\n   * Handle reset event from out side.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialTextfield.prototype.onReset_ = function(event) {\r\n    this.updateClasses_();\r\n  };\r\n\r\n  /**\r\n   * Handle class updates.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialTextfield.prototype.updateClasses_ = function() {\r\n    this.checkDisabled();\r\n    this.checkValidity();\r\n    this.checkDirty();\r\n    this.checkFocus();\r\n  };\r\n\r\n  // Public methods.\r\n\r\n  /**\r\n   * Check the disabled state and update field accordingly.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialTextfield.prototype.checkDisabled = function() {\r\n    if (this.input_.disabled) {\r\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\r\n    }\r\n  };\r\n  MaterialTextfield.prototype['checkDisabled'] =\r\n      MaterialTextfield.prototype.checkDisabled;\r\n\r\n  /**\r\n  * Check the focus state and update field accordingly.\r\n  *\r\n  * @public\r\n  */\r\n  MaterialTextfield.prototype.checkFocus = function() {\r\n    if (Boolean(this.element_.querySelector(':focus'))) {\r\n      this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\r\n    }\r\n  };\r\n  MaterialTextfield.prototype['checkFocus'] =\r\n    MaterialTextfield.prototype.checkFocus;\r\n\r\n  /**\r\n   * Check the validity state and update field accordingly.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialTextfield.prototype.checkValidity = function() {\r\n    if (this.input_.validity) {\r\n      if (this.input_.validity.valid) {\r\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\r\n      } else {\r\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\r\n      }\r\n    }\r\n  };\r\n  MaterialTextfield.prototype['checkValidity'] =\r\n      MaterialTextfield.prototype.checkValidity;\r\n\r\n  /**\r\n   * Check the dirty state and update field accordingly.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialTextfield.prototype.checkDirty = function() {\r\n    if (this.input_.value && this.input_.value.length > 0) {\r\n      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\r\n    }\r\n  };\r\n  MaterialTextfield.prototype['checkDirty'] =\r\n      MaterialTextfield.prototype.checkDirty;\r\n\r\n  /**\r\n   * Disable text field.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialTextfield.prototype.disable = function() {\r\n    this.input_.disabled = true;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\r\n\r\n  /**\r\n   * Enable text field.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialTextfield.prototype.enable = function() {\r\n    this.input_.disabled = false;\r\n    this.updateClasses_();\r\n  };\r\n  MaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\r\n\r\n  /**\r\n   * Update text field value.\r\n   *\r\n   * @param {string} value The value to which to set the control (optional).\r\n   * @public\r\n   */\r\n  MaterialTextfield.prototype.change = function(value) {\r\n\r\n    this.input_.value = value || '';\r\n    this.updateClasses_();\r\n  };\r\n  MaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialTextfield.prototype.init = function() {\r\n\r\n    if (this.element_) {\r\n      this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\r\n      this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\r\n\r\n      if (this.input_) {\r\n        if (this.input_.hasAttribute(\r\n              /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE))) {\r\n          this.maxRows = parseInt(this.input_.getAttribute(\r\n              /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE)), 10);\r\n          if (isNaN(this.maxRows)) {\r\n            this.maxRows = this.Constant_.NO_MAX_ROWS;\r\n          }\r\n        }\r\n\r\n        if (this.input_.hasAttribute('placeholder')) {\r\n          this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\r\n        }\r\n\r\n        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\r\n        this.boundFocusHandler = this.onFocus_.bind(this);\r\n        this.boundBlurHandler = this.onBlur_.bind(this);\r\n        this.boundResetHandler = this.onReset_.bind(this);\r\n        this.input_.addEventListener('input', this.boundUpdateClassesHandler);\r\n        this.input_.addEventListener('focus', this.boundFocusHandler);\r\n        this.input_.addEventListener('blur', this.boundBlurHandler);\r\n        this.input_.addEventListener('reset', this.boundResetHandler);\r\n\r\n        if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\r\n          // TODO: This should handle pasting multi line text.\r\n          // Currently doesn't.\r\n          this.boundKeyDownHandler = this.onKeyDown_.bind(this);\r\n          this.input_.addEventListener('keydown', this.boundKeyDownHandler);\r\n        }\r\n        var invalid = this.element_.classList\r\n          .contains(this.CssClasses_.IS_INVALID);\r\n        this.updateClasses_();\r\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\r\n        if (invalid) {\r\n          this.element_.classList.add(this.CssClasses_.IS_INVALID);\r\n        }\r\n        if (this.input_.hasAttribute('autofocus')) {\r\n          this.element_.focus();\r\n          this.checkFocus();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialTextfield,\r\n    classAsString: 'MaterialTextfield',\r\n    cssClass: 'mdl-js-textfield',\r\n    widget: true\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Tooltip MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialTooltip = function MaterialTooltip(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialTooltip'] = MaterialTooltip;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialTooltip.prototype.Constant_ = {\r\n    // None for now.\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialTooltip.prototype.CssClasses_ = {\r\n    IS_ACTIVE: 'is-active',\r\n    BOTTOM: 'mdl-tooltip--bottom',\r\n    LEFT: 'mdl-tooltip--left',\r\n    RIGHT: 'mdl-tooltip--right',\r\n    TOP: 'mdl-tooltip--top'\r\n  };\r\n\r\n  /**\r\n   * Handle mouseenter for tooltip.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialTooltip.prototype.handleMouseEnter_ = function(event) {\r\n    var props = event.target.getBoundingClientRect();\r\n    var left = props.left + (props.width / 2);\r\n    var top = props.top + (props.height / 2);\r\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\r\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\r\n\r\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\r\n      left = (props.width / 2);\r\n      if (top + marginTop < 0) {\r\n        this.element_.style.top = '0';\r\n        this.element_.style.marginTop = '0';\r\n      } else {\r\n        this.element_.style.top = top + 'px';\r\n        this.element_.style.marginTop = marginTop + 'px';\r\n      }\r\n    } else {\r\n      if (left + marginLeft < 0) {\r\n        this.element_.style.left = '0';\r\n        this.element_.style.marginLeft = '0';\r\n      } else {\r\n        this.element_.style.left = left + 'px';\r\n        this.element_.style.marginLeft = marginLeft + 'px';\r\n      }\r\n    }\r\n\r\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\r\n      this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\r\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\r\n      this.element_.style.left = props.left + props.width + 10 + 'px';\r\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\r\n      this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\r\n    } else {\r\n      this.element_.style.top = props.top + props.height + 10 + 'px';\r\n    }\r\n\r\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\r\n  };\r\n\r\n  /**\r\n   * Hide tooltip on mouseleave or scroll\r\n   *\r\n   * @private\r\n   */\r\n  MaterialTooltip.prototype.hideTooltip_ = function() {\r\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\r\n  };\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialTooltip.prototype.init = function() {\r\n\r\n    if (this.element_) {\r\n      var forElId = this.element_.getAttribute('for') ||\r\n          this.element_.getAttribute('data-mdl-for');\r\n\r\n      if (forElId) {\r\n        this.forElement_ = document.getElementById(forElId);\r\n      }\r\n\r\n      if (this.forElement_) {\r\n        // It's left here because it prevents accidental text selection on Android\r\n        if (!this.forElement_.hasAttribute('tabindex')) {\r\n          this.forElement_.setAttribute('tabindex', '0');\r\n        }\r\n\r\n        this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\r\n        this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\r\n        this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\r\n        this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\r\n        this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\r\n        window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\r\n        window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\r\n      }\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialTooltip,\r\n    classAsString: 'MaterialTooltip',\r\n    cssClass: 'mdl-tooltip'\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Layout MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialLayout = function MaterialLayout(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialLayout'] = MaterialLayout;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.Constant_ = {\r\n    MAX_WIDTH: '(max-width: 1024px)',\r\n    TAB_SCROLL_PIXELS: 100,\r\n    RESIZE_TIMEOUT: 100,\r\n\r\n    MENU_ICON: '&#xE5D2;',\r\n    CHEVRON_LEFT: 'chevron_left',\r\n    CHEVRON_RIGHT: 'chevron_right'\r\n  };\r\n\r\n  /**\r\n   * Keycodes, for code readability.\r\n   *\r\n   * @enum {number}\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.Keycodes_ = {\r\n    ENTER: 13,\r\n    ESCAPE: 27,\r\n    SPACE: 32\r\n  };\r\n\r\n  /**\r\n   * Modes.\r\n   *\r\n   * @enum {number}\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.Mode_ = {\r\n    STANDARD: 0,\r\n    SEAMED: 1,\r\n    WATERFALL: 2,\r\n    SCROLL: 3\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.CssClasses_ = {\r\n    CONTAINER: 'mdl-layout__container',\r\n    HEADER: 'mdl-layout__header',\r\n    DRAWER: 'mdl-layout__drawer',\r\n    CONTENT: 'mdl-layout__content',\r\n    DRAWER_BTN: 'mdl-layout__drawer-button',\r\n\r\n    ICON: 'material-icons',\r\n\r\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\r\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\r\n    RIPPLE: 'mdl-ripple',\r\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\r\n\r\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\r\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\r\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\r\n\r\n    FIXED_HEADER: 'mdl-layout--fixed-header',\r\n    OBFUSCATOR: 'mdl-layout__obfuscator',\r\n\r\n    TAB_BAR: 'mdl-layout__tab-bar',\r\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\r\n    TAB: 'mdl-layout__tab',\r\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\r\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\r\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\r\n    TAB_MANUAL_SWITCH: 'mdl-layout__tab-manual-switch',\r\n    PANEL: 'mdl-layout__tab-panel',\r\n\r\n    HAS_DRAWER: 'has-drawer',\r\n    HAS_TABS: 'has-tabs',\r\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\r\n    CASTING_SHADOW: 'is-casting-shadow',\r\n    IS_COMPACT: 'is-compact',\r\n    IS_SMALL_SCREEN: 'is-small-screen',\r\n    IS_DRAWER_OPEN: 'is-visible',\r\n    IS_ACTIVE: 'is-active',\r\n    IS_UPGRADED: 'is-upgraded',\r\n    IS_ANIMATING: 'is-animating',\r\n\r\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\r\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\r\n\r\n  };\r\n\r\n  /**\r\n   * Handles scrolling on the content.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.contentScrollHandler_ = function() {\r\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\r\n      return;\r\n    }\r\n\r\n    var headerVisible =\r\n        !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) ||\r\n        this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\r\n\r\n    if (this.content_.scrollTop > 0 &&\r\n        !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\r\n      this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\r\n      this.header_.classList.add(this.CssClasses_.IS_COMPACT);\r\n      if (headerVisible) {\r\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\r\n      }\r\n    } else if (this.content_.scrollTop <= 0 &&\r\n        this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\r\n      this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\r\n      this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\r\n      if (headerVisible) {\r\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles a keyboard event on the drawer.\r\n   *\r\n   * @param {Event} evt The event that fired.\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.keyboardEventHandler_ = function(evt) {\r\n    // Only react when the drawer is open.\r\n    if (evt.keyCode === this.Keycodes_.ESCAPE &&\r\n        this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\r\n      this.toggleDrawer();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles changes in screen size.\r\n   *\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.screenSizeHandler_ = function() {\r\n    if (this.screenSizeMediaQuery_.matches) {\r\n      this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\r\n    } else {\r\n      this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\r\n      // Collapse drawer (if any) when moving to a large screen size.\r\n      if (this.drawer_) {\r\n        this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\r\n        this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handles events of drawer button.\r\n   *\r\n   * @param {Event} evt The event that fired.\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.drawerToggleHandler_ = function(evt) {\r\n    if (evt && (evt.type === 'keydown')) {\r\n      if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\r\n        // prevent scrolling in drawer nav\r\n        evt.preventDefault();\r\n      } else {\r\n        // prevent other keys\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.toggleDrawer();\r\n  };\r\n\r\n  /**\r\n   * Handles (un)setting the `is-animating` class\r\n   *\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.headerTransitionEndHandler_ = function() {\r\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\r\n  };\r\n\r\n  /**\r\n   * Handles expanding the header on click\r\n   *\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.headerClickHandler_ = function() {\r\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\r\n      this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\r\n      this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reset tab state, dropping active classes\r\n   *\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.resetTabState_ = function(tabBar) {\r\n    for (var k = 0; k < tabBar.length; k++) {\r\n      tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reset panel state, droping active classes\r\n   *\r\n   * @private\r\n   */\r\n  MaterialLayout.prototype.resetPanelState_ = function(panels) {\r\n    for (var j = 0; j < panels.length; j++) {\r\n      panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\r\n    }\r\n  };\r\n\r\n  /**\r\n  * Toggle drawer state\r\n  *\r\n  * @public\r\n  */\r\n  MaterialLayout.prototype.toggleDrawer = function() {\r\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\r\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\r\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\r\n\r\n    // Set accessibility properties.\r\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\r\n      this.drawer_.setAttribute('aria-hidden', 'false');\r\n      drawerButton.setAttribute('aria-expanded', 'true');\r\n    } else {\r\n      this.drawer_.setAttribute('aria-hidden', 'true');\r\n      drawerButton.setAttribute('aria-expanded', 'false');\r\n    }\r\n  };\r\n  MaterialLayout.prototype['toggleDrawer'] =\r\n      MaterialLayout.prototype.toggleDrawer;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialLayout.prototype.init = function() {\r\n    if (this.element_) {\r\n      var container = document.createElement('div');\r\n      container.classList.add(this.CssClasses_.CONTAINER);\r\n\r\n      var focusedElement = this.element_.querySelector(':focus');\r\n\r\n      this.element_.parentElement.insertBefore(container, this.element_);\r\n      this.element_.parentElement.removeChild(this.element_);\r\n      container.appendChild(this.element_);\r\n\r\n      if (focusedElement) {\r\n        focusedElement.focus();\r\n      }\r\n\r\n      var directChildren = this.element_.childNodes;\r\n      var numChildren = directChildren.length;\r\n      for (var c = 0; c < numChildren; c++) {\r\n        var child = directChildren[c];\r\n        if (child.classList &&\r\n            child.classList.contains(this.CssClasses_.HEADER)) {\r\n          this.header_ = child;\r\n        }\r\n\r\n        if (child.classList &&\r\n            child.classList.contains(this.CssClasses_.DRAWER)) {\r\n          this.drawer_ = child;\r\n        }\r\n\r\n        if (child.classList &&\r\n            child.classList.contains(this.CssClasses_.CONTENT)) {\r\n          this.content_ = child;\r\n        }\r\n      }\r\n\r\n      window.addEventListener('pageshow', function(e) {\r\n        if (e.persisted) { // when page is loaded from back/forward cache\r\n          // trigger repaint to let layout scroll in safari\r\n          this.element_.style.overflowY = 'hidden';\r\n          requestAnimationFrame(function() {\r\n            this.element_.style.overflowY = '';\r\n          }.bind(this));\r\n        }\r\n      }.bind(this), false);\r\n\r\n      if (this.header_) {\r\n        this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\r\n      }\r\n\r\n      var mode = this.Mode_.STANDARD;\r\n\r\n      if (this.header_) {\r\n        if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\r\n          mode = this.Mode_.SEAMED;\r\n        } else if (this.header_.classList.contains(\r\n            this.CssClasses_.HEADER_WATERFALL)) {\r\n          mode = this.Mode_.WATERFALL;\r\n          this.header_.addEventListener('transitionend',\r\n            this.headerTransitionEndHandler_.bind(this));\r\n          this.header_.addEventListener('click',\r\n            this.headerClickHandler_.bind(this));\r\n        } else if (this.header_.classList.contains(\r\n            this.CssClasses_.HEADER_SCROLL)) {\r\n          mode = this.Mode_.SCROLL;\r\n          container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\r\n        }\r\n\r\n        if (mode === this.Mode_.STANDARD) {\r\n          this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\r\n          if (this.tabBar_) {\r\n            this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\r\n          }\r\n        } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\r\n          this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\r\n          if (this.tabBar_) {\r\n            this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\r\n          }\r\n        } else if (mode === this.Mode_.WATERFALL) {\r\n          // Add and remove shadows depending on scroll position.\r\n          // Also add/remove auxiliary class for styling of the compact version of\r\n          // the header.\r\n          this.content_.addEventListener('scroll',\r\n              this.contentScrollHandler_.bind(this));\r\n          this.contentScrollHandler_();\r\n        }\r\n      }\r\n\r\n      // Add drawer toggling button to our layout, if we have an openable drawer.\r\n      if (this.drawer_) {\r\n        var drawerButton = this.element_.querySelector('.' +\r\n          this.CssClasses_.DRAWER_BTN);\r\n        if (!drawerButton) {\r\n          drawerButton = document.createElement('div');\r\n          drawerButton.setAttribute('aria-expanded', 'false');\r\n          drawerButton.setAttribute('role', 'button');\r\n          drawerButton.setAttribute('tabindex', '0');\r\n          drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\r\n\r\n          var drawerButtonIcon = document.createElement('i');\r\n          drawerButtonIcon.classList.add(this.CssClasses_.ICON);\r\n          drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\r\n          drawerButton.appendChild(drawerButtonIcon);\r\n        }\r\n\r\n        if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\r\n          //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\r\n          drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\r\n        } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\r\n          //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\r\n          drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\r\n        }\r\n\r\n        drawerButton.addEventListener('click',\r\n            this.drawerToggleHandler_.bind(this));\r\n\r\n        drawerButton.addEventListener('keydown',\r\n            this.drawerToggleHandler_.bind(this));\r\n\r\n        // Add a class if the layout has a drawer, for altering the left padding.\r\n        // Adds the HAS_DRAWER to the elements since this.header_ may or may\r\n        // not be present.\r\n        this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\r\n\r\n        // If we have a fixed header, add the button to the header rather than\r\n        // the layout.\r\n        if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\r\n          this.header_.insertBefore(drawerButton, this.header_.firstChild);\r\n        } else {\r\n          this.element_.insertBefore(drawerButton, this.content_);\r\n        }\r\n\r\n        var obfuscator = document.createElement('div');\r\n        obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\r\n        this.element_.appendChild(obfuscator);\r\n        obfuscator.addEventListener('click',\r\n            this.drawerToggleHandler_.bind(this));\r\n        this.obfuscator_ = obfuscator;\r\n\r\n        this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\r\n        this.drawer_.setAttribute('aria-hidden', 'true');\r\n      }\r\n\r\n      // Keep an eye on screen size, and add/remove auxiliary class for styling\r\n      // of small screens.\r\n      this.screenSizeMediaQuery_ = window.matchMedia(\r\n          /** @type {string} */ (this.Constant_.MAX_WIDTH));\r\n      this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\r\n      this.screenSizeHandler_();\r\n\r\n      // Initialize tabs, if any.\r\n      if (this.header_ && this.tabBar_) {\r\n        this.element_.classList.add(this.CssClasses_.HAS_TABS);\r\n\r\n        var tabContainer = document.createElement('div');\r\n        tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\r\n        this.header_.insertBefore(tabContainer, this.tabBar_);\r\n        this.header_.removeChild(this.tabBar_);\r\n\r\n        var leftButton = document.createElement('div');\r\n        leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\r\n        leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\r\n        var leftButtonIcon = document.createElement('i');\r\n        leftButtonIcon.classList.add(this.CssClasses_.ICON);\r\n        leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\r\n        leftButton.appendChild(leftButtonIcon);\r\n        leftButton.addEventListener('click', function() {\r\n          this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\r\n        }.bind(this));\r\n\r\n        var rightButton = document.createElement('div');\r\n        rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\r\n        rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\r\n        var rightButtonIcon = document.createElement('i');\r\n        rightButtonIcon.classList.add(this.CssClasses_.ICON);\r\n        rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\r\n        rightButton.appendChild(rightButtonIcon);\r\n        rightButton.addEventListener('click', function() {\r\n          this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\r\n        }.bind(this));\r\n\r\n        tabContainer.appendChild(leftButton);\r\n        tabContainer.appendChild(this.tabBar_);\r\n        tabContainer.appendChild(rightButton);\r\n\r\n        // Add and remove tab buttons depending on scroll position and total\r\n        // window size.\r\n        var tabUpdateHandler = function() {\r\n          if (this.tabBar_.scrollLeft > 0) {\r\n            leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\r\n          } else {\r\n            leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\r\n          }\r\n\r\n          if (this.tabBar_.scrollLeft <\r\n              this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\r\n            rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\r\n          } else {\r\n            rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\r\n          }\r\n        }.bind(this);\r\n\r\n        this.tabBar_.addEventListener('scroll', tabUpdateHandler);\r\n        tabUpdateHandler();\r\n\r\n        // Update tabs when the window resizes.\r\n        var windowResizeHandler = function() {\r\n          // Use timeouts to make sure it doesn't happen too often.\r\n          if (this.resizeTimeoutId_) {\r\n            clearTimeout(this.resizeTimeoutId_);\r\n          }\r\n          this.resizeTimeoutId_ = setTimeout(function() {\r\n            tabUpdateHandler();\r\n            this.resizeTimeoutId_ = null;\r\n          }.bind(this), /** @type {number} */ (this.Constant_.RESIZE_TIMEOUT));\r\n        }.bind(this);\r\n\r\n        window.addEventListener('resize', windowResizeHandler);\r\n\r\n        if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\r\n          this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\r\n        }\r\n\r\n        // Select element tabs, document panels\r\n        var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\r\n        var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\r\n\r\n        // Create new tabs for each tab element\r\n        for (var i = 0; i < tabs.length; i++) {\r\n          new MaterialLayoutTab(tabs[i], tabs, panels, this);\r\n        }\r\n      }\r\n\r\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Constructor for an individual tab.\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} tab The HTML element for the tab.\r\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\r\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\r\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\r\n   */\r\n  function MaterialLayoutTab(tab, tabs, panels, layout) {\r\n\r\n    /**\r\n     * Auxiliary method to programmatically select a tab in the UI.\r\n     */\r\n    function selectTab() {\r\n      var href = tab.href.split('#')[1];\r\n      var panel = layout.content_.querySelector('#' + href);\r\n      layout.resetTabState_(tabs);\r\n      layout.resetPanelState_(panels);\r\n      tab.classList.add(layout.CssClasses_.IS_ACTIVE);\r\n      panel.classList.add(layout.CssClasses_.IS_ACTIVE);\r\n    }\r\n\r\n    if (layout.tabBar_.classList.contains(\r\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {\r\n      var rippleContainer = document.createElement('span');\r\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\r\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\r\n      var ripple = document.createElement('span');\r\n      ripple.classList.add(layout.CssClasses_.RIPPLE);\r\n      rippleContainer.appendChild(ripple);\r\n      tab.appendChild(rippleContainer);\r\n    }\r\n\r\n    if (!layout.tabBar_.classList.contains(\r\n      layout.CssClasses_.TAB_MANUAL_SWITCH)) {\r\n      tab.addEventListener('click', function(e) {\r\n        if (tab.getAttribute('href').charAt(0) === '#') {\r\n          e.preventDefault();\r\n          selectTab();\r\n        }\r\n      });\r\n    }\r\n\r\n    tab.show = selectTab;\r\n  }\r\n  window['MaterialLayoutTab'] = MaterialLayoutTab;\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialLayout,\r\n    classAsString: 'MaterialLayout',\r\n    cssClass: 'mdl-js-layout'\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Data Table Card MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {Element} element The element that will be upgraded.\r\n   */\r\n  var MaterialDataTable = function MaterialDataTable(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n\r\n  window['MaterialDataTable'] = MaterialDataTable;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialDataTable.prototype.Constant_ = {\r\n    // None at the moment.\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialDataTable.prototype.CssClasses_ = {\r\n    DATA_TABLE: 'mdl-data-table',\r\n    SELECTABLE: 'mdl-data-table--selectable',\r\n    SELECT_ELEMENT: 'mdl-data-table__select',\r\n    IS_SELECTED: 'is-selected',\r\n    IS_UPGRADED: 'is-upgraded'\r\n  };\r\n\r\n  /**\r\n   * Generates and returns a function that toggles the selection state of a\r\n   * single row (or multiple rows).\r\n   *\r\n   * @param {Element} checkbox Checkbox that toggles the selection state.\r\n   * @param {Element} row Row to toggle when checkbox changes.\r\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\r\n   * @private\r\n   */\r\n  MaterialDataTable.prototype.selectRow_ = function(checkbox, row, opt_rows) {\r\n    if (row) {\r\n      return function() {\r\n        if (checkbox.checked) {\r\n          row.classList.add(this.CssClasses_.IS_SELECTED);\r\n        } else {\r\n          row.classList.remove(this.CssClasses_.IS_SELECTED);\r\n        }\r\n      }.bind(this);\r\n    }\r\n\r\n    if (opt_rows) {\r\n      return function() {\r\n        var i;\r\n        var el;\r\n        if (checkbox.checked) {\r\n          for (i = 0; i < opt_rows.length; i++) {\r\n            el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\r\n            el['MaterialCheckbox'].check();\r\n            opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\r\n          }\r\n        } else {\r\n          for (i = 0; i < opt_rows.length; i++) {\r\n            el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\r\n            el['MaterialCheckbox'].uncheck();\r\n            opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\r\n          }\r\n        }\r\n      }.bind(this);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Creates a checkbox for a single or or multiple rows and hooks up the\r\n   * event handling.\r\n   *\r\n   * @param {Element} row Row to toggle when checkbox changes.\r\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\r\n   * @private\r\n   */\r\n  MaterialDataTable.prototype.createCheckbox_ = function(row, opt_rows) {\r\n    var label = document.createElement('label');\r\n    var labelClasses = [\r\n      'mdl-checkbox',\r\n      'mdl-js-checkbox',\r\n      'mdl-js-ripple-effect',\r\n      this.CssClasses_.SELECT_ELEMENT\r\n    ];\r\n    label.className = labelClasses.join(' ');\r\n    var checkbox = document.createElement('input');\r\n    checkbox.type = 'checkbox';\r\n    checkbox.classList.add('mdl-checkbox__input');\r\n\r\n    if (row) {\r\n      checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\r\n      checkbox.addEventListener('change', this.selectRow_(checkbox, row));\r\n    } else if (opt_rows) {\r\n      checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\r\n    }\r\n\r\n    label.appendChild(checkbox);\r\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\r\n    return label;\r\n  };\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialDataTable.prototype.init = function() {\r\n    if (this.element_) {\r\n      var firstHeader = this.element_.querySelector('th');\r\n      var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\r\n      var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\r\n      var rows = bodyRows.concat(footRows);\r\n\r\n      if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\r\n        var th = document.createElement('th');\r\n        var headerCheckbox = this.createCheckbox_(null, rows);\r\n        th.appendChild(headerCheckbox);\r\n        firstHeader.parentElement.insertBefore(th, firstHeader);\r\n\r\n        for (var i = 0; i < rows.length; i++) {\r\n          var firstCell = rows[i].querySelector('td');\r\n          if (firstCell) {\r\n            var td = document.createElement('td');\r\n            if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\r\n              var rowCheckbox = this.createCheckbox_(rows[i]);\r\n              td.appendChild(rowCheckbox);\r\n            }\r\n            rows[i].insertBefore(td, firstCell);\r\n          }\r\n        }\r\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\r\n      }\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialDataTable,\r\n    classAsString: 'MaterialDataTable',\r\n    cssClass: 'mdl-js-data-table'\r\n  });\r\n})();\r\n","/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Ripple MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @constructor\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialRipple = function MaterialRipple(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialRipple'] = MaterialRipple;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialRipple.prototype.Constant_ = {\r\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\r\n    INITIAL_SIZE: '1px',\r\n    INITIAL_OPACITY: '0.4',\r\n    FINAL_OPACITY: '0',\r\n    FINAL_SCALE: ''\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialRipple.prototype.CssClasses_ = {\r\n    RIPPLE_CENTER: 'mdl-ripple--center',\r\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\r\n    RIPPLE: 'mdl-ripple',\r\n    IS_ANIMATING: 'is-animating',\r\n    IS_VISIBLE: 'is-visible'\r\n  };\r\n\r\n  /**\r\n   * Handle mouse / finger down on element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialRipple.prototype.downHandler_ = function(event) {\r\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\r\n      var rect = this.element_.getBoundingClientRect();\r\n      this.boundHeight = rect.height;\r\n      this.boundWidth = rect.width;\r\n      this.rippleSize_ = Math.sqrt(rect.width * rect.width +\r\n          rect.height * rect.height) * 2 + 2;\r\n      this.rippleElement_.style.width = this.rippleSize_ + 'px';\r\n      this.rippleElement_.style.height = this.rippleSize_ + 'px';\r\n    }\r\n\r\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\r\n\r\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\r\n      this.ignoringMouseDown_ = false;\r\n    } else {\r\n      if (event.type === 'touchstart') {\r\n        this.ignoringMouseDown_ = true;\r\n      }\r\n      var frameCount = this.getFrameCount();\r\n      if (frameCount > 0) {\r\n        return;\r\n      }\r\n      this.setFrameCount(1);\r\n      var bound = event.currentTarget.getBoundingClientRect();\r\n      var x;\r\n      var y;\r\n      // Check if we are handling a keyboard click.\r\n      if (event.clientX === 0 && event.clientY === 0) {\r\n        x = Math.round(bound.width / 2);\r\n        y = Math.round(bound.height / 2);\r\n      } else {\r\n        var clientX = event.clientX !== undefined ? event.clientX : event.touches[0].clientX;\r\n        var clientY = event.clientY !== undefined ? event.clientY : event.touches[0].clientY;\r\n        x = Math.round(clientX - bound.left);\r\n        y = Math.round(clientY - bound.top);\r\n      }\r\n      this.setRippleXY(x, y);\r\n      this.setRippleStyles(true);\r\n      window.requestAnimationFrame(this.animFrameHandler.bind(this));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse / finger up on element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialRipple.prototype.upHandler_ = function(event) {\r\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\r\n    if (event && event.detail !== 2) {\r\n      // Allow a repaint to occur before removing this class, so the animation\r\n      // shows for tap events, which seem to trigger a mouseup too soon after\r\n      // mousedown.\r\n      window.setTimeout(function() {\r\n        this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\r\n      }.bind(this), 0);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialRipple.prototype.init = function() {\r\n    if (this.element_) {\r\n      var recentering =\r\n          this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\r\n      if (!this.element_.classList.contains(\r\n          this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\r\n        this.rippleElement_ = this.element_.querySelector('.' +\r\n            this.CssClasses_.RIPPLE);\r\n        this.frameCount_ = 0;\r\n        this.rippleSize_ = 0;\r\n        this.x_ = 0;\r\n        this.y_ = 0;\r\n\r\n        // Touch start produces a compat mouse down event, which would cause a\r\n        // second ripples. To avoid that, we use this property to ignore the first\r\n        // mouse down after a touch start.\r\n        this.ignoringMouseDown_ = false;\r\n\r\n        this.boundDownHandler = this.downHandler_.bind(this);\r\n        this.element_.addEventListener('mousedown',\r\n          this.boundDownHandler);\r\n        this.element_.addEventListener('touchstart',\r\n            this.boundDownHandler);\r\n\r\n        this.boundUpHandler = this.upHandler_.bind(this);\r\n        this.element_.addEventListener('mouseup', this.boundUpHandler);\r\n        this.element_.addEventListener('mouseleave', this.boundUpHandler);\r\n        this.element_.addEventListener('touchend', this.boundUpHandler);\r\n        this.element_.addEventListener('blur', this.boundUpHandler);\r\n\r\n        /**\r\n         * Getter for frameCount_.\r\n         * @return {number} the frame count.\r\n         */\r\n        this.getFrameCount = function() {\r\n          return this.frameCount_;\r\n        };\r\n\r\n        /**\r\n         * Setter for frameCount_.\r\n         * @param {number} fC the frame count.\r\n         */\r\n        this.setFrameCount = function(fC) {\r\n          this.frameCount_ = fC;\r\n        };\r\n\r\n        /**\r\n         * Getter for rippleElement_.\r\n         * @return {Element} the ripple element.\r\n         */\r\n        this.getRippleElement = function() {\r\n          return this.rippleElement_;\r\n        };\r\n\r\n        /**\r\n         * Sets the ripple X and Y coordinates.\r\n         * @param  {number} newX the new X coordinate\r\n         * @param  {number} newY the new Y coordinate\r\n         */\r\n        this.setRippleXY = function(newX, newY) {\r\n          this.x_ = newX;\r\n          this.y_ = newY;\r\n        };\r\n\r\n        /**\r\n         * Sets the ripple styles.\r\n         * @param  {boolean} start whether or not this is the start frame.\r\n         */\r\n        this.setRippleStyles = function(start) {\r\n          if (this.rippleElement_ !== null) {\r\n            var transformString;\r\n            var scale;\r\n            var size;\r\n            var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\r\n\r\n            if (start) {\r\n              scale = this.Constant_.INITIAL_SCALE;\r\n              size = this.Constant_.INITIAL_SIZE;\r\n            } else {\r\n              scale = this.Constant_.FINAL_SCALE;\r\n              size = this.rippleSize_ + 'px';\r\n              if (recentering) {\r\n                offset = 'translate(' + this.boundWidth / 2 + 'px, ' +\r\n                  this.boundHeight / 2 + 'px)';\r\n              }\r\n            }\r\n\r\n            transformString = 'translate(-50%, -50%) ' + offset + scale;\r\n\r\n            this.rippleElement_.style.webkitTransform = transformString;\r\n            this.rippleElement_.style.msTransform = transformString;\r\n            this.rippleElement_.style.transform = transformString;\r\n\r\n            if (start) {\r\n              this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\r\n            } else {\r\n              this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\r\n            }\r\n          }\r\n        };\r\n\r\n        /**\r\n         * Handles an animation frame.\r\n         */\r\n        this.animFrameHandler = function() {\r\n          if (this.frameCount_-- > 0) {\r\n            window.requestAnimationFrame(this.animFrameHandler.bind(this));\r\n          } else {\r\n            this.setRippleStyles(false);\r\n          }\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialRipple,\r\n    classAsString: 'MaterialRipple',\r\n    cssClass: 'mdl-js-ripple-effect',\r\n    widget: false\r\n  });\r\n})();\r\n","/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n})();\n"]}